exports[`mdjsToCsf : transforms a mdjs file to csf 1`] = [
  "const __export_default__ = {",
  "  title: \"My docs\"",
  "};",
  "export const MyStory = () => html`<div>My story</div>`",
  "MyStory.story = MyStory.story || {};",
  "MyStory.story.parameters = MyStory.story.parameters || {};",
  "MyStory.story.parameters.mdxSource = \"export const MyStory = () => html`<div>My story</div>`\";",
  "",
  "export const MyOtherStory = () => html`<div>My other story</div>`",
  "MyOtherStory.story = MyOtherStory.story || {};",
  "MyOtherStory.story.parameters = MyOtherStory.story.parameters || {};",
  "MyOtherStory.story.parameters.mdxSource = \"export const MyOtherStory = () => html`<div>My other story</div>`\";",
  "",
  "",
  "/**",
  " *",
  " * The code below is generated by storybook docs.",
  " *",
  " */",
  "import * as React from 'storybook-prebuilt/react.js';",
  "import { mdx, AddContext } from 'storybook-prebuilt/addon-docs/blocks.js'; // Setup docs page",
  "",
  "const mdxStoryNameToKey = {",
  "  \"MyStory\": \"MyStory\",",
  "  \"MyOtherStory\": \"MyOtherStory\"",
  "};",
  "__export_default__.parameters = __export_default__.parameters || {};",
  "__export_default__.parameters.docs = __export_default__.parameters.docs || {};",
  "",
  "__export_default__.parameters.docs.page = () => mdx(AddContext, {",
  "  mdxStoryNameToKey: mdxStoryNameToKey,",
  "  mdxComponentMeta: __export_default__",
  "}, mdx(MDXContent, null));",
  "",
  "export default __export_default__; // The docs page, markdown turned into using jsx for storybook",
  "",
  "/* @jsx mdx */",
  "",
  "import { Story, Preview, Props } from 'storybook-prebuilt/addon-docs/blocks.js';",
  "",
  "const makeShortcode = name => function MDXDefaultShortcode(props) {",
  "  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");",
  "  return mdx(\"div\", { ...props",
  "  });",
  "};",
  "",
  "const layoutProps = {};",
  "const MDXLayout = \"wrapper\";",
  "",
  "function MDXContent({",
  "  components,",
  "  ...props",
  "}) {",
  "  return mdx(MDXLayout, { ...layoutProps,",
  "    ...props,",
  "    components: components,",
  "    mdxType: \"MDXLayout\"",
  "  }, mdx(\"h1\", {",
  "    id: \"title\"",
  "  }, \"Title\"), mdx(\"p\", null, \"Codeblock:\"), mdx(\"pre\", null, mdx(\"code\", {",
  "    parentName: \"pre\",",
  "    ...{",
  "      \"className\": \"language-js\"",
  "    }",
  "  }, `console.log(\"foo\");",
  "`)), mdx(\"h2\", {",
  "    id: \"subtitle\"",
  "  }, \"Subtitle\"), mdx(\"ul\", null, mdx(\"li\", null, \"A\"), mdx(\"li\", null, \"B\")), mdx(Story, {",
  "    name: \"MyStory\",",
  "    mdxType: \"Story\"",
  "  }), mdx(Preview, {",
  "    mdxType: \"Preview\"",
  "  }, mdx(Story, {",
  "    name: \"MyOtherStory\",",
  "    mdxType: \"Story\"",
  "  })), mdx(\"h2\", {",
  "    id: \"api\"",
  "  }, \"API\"), mdx(Props, {",
  "    of: \"my-component\",",
  "    mdxType: \"Props\"",
  "  }));",
  "}",
  "",
  ";",
  "MDXContent.isMDXComponent = true;"
];
